version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_init/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  mongodb:
    image: mongo:6
    container_name: mongodb
    restart: always
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    restart: always
    depends_on:
      - postgres
      - rabbitmq
      - mongodb
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - MONGO_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    ports:
      - "8080:8080"

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: worker
    restart: always
    depends_on:
      - postgres
      - rabbitmq
      - mongodb
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - MONGO_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}

volumes:
  postgres_data:
  mongo_data:
